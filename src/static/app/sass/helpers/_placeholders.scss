// Placeholders are extendable blocks of styles
// that can be used via @extend, with the
// behavior that there won't be a large
// mass of classes created in your final CSS
// document.
//
// Use placeholders if you do not need a
// generic root class to inherit styles from, and
// just need a grouping of styles to share.

%list-reset {
	list-style: none;
	margin: 0;
	padding: 0;
}

%inline-list {
	@extend %list-reset;

	li {
		display: inline-block;
	}

}

%overlay {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

// Maintains 1:1 image proportions. Works best when direct child uses %overlay.
%square-scale {

	&:before {
		content: '';
		padding-top: 100%;
		display: block;
	}

}

%standard-section-padding {
	padding-top: $standard-padding;
	padding-bottom: $standard-padding;

	@include breakpoint(large) {
		padding-top: $standard-padding*2;
		padding-bottom: $standard-padding*2;
	}

	@include breakpoint(xlarge) {
		padding-top: $standard-padding*3;
		padding-bottom: $standard-padding*3;
	}

}

%animated-background-gradient {
	background: linear-gradient(150deg, $burnt-orange, $purple);
	background-size: 400% 400%;
	animation: background-color-fade 25s ease infinite;
}

%display-font {
	font-family: $display-font;
	font-weight: 400;
	letter-spacing: 0;
}

%dark-links {

	.user-markup a {
		color: inherit;

		&:focus,
		&:hover {
			color: $dark-link-color;
		}

	}

}
